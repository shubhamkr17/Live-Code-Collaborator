<style>
    #input {
        height: 100px;
        margin-bottom: 20px;
    }
    #output {
        height : 100px;
    }
</style>
<div>
    <div class="row">
        <div class="col-md-8">
            <div class="row">
                <div class="col-md-8">
                    <h3>Code Editor </h3>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                    <label for="sel1">Select language:</label>
                    <select class="form-control" id="sel1">
                        <option value="c" selected>C</option>
                        <option value="cpp">C++</option>
                        <option value="python3">Python 3</option>
                        <option value="java">Java</option>
                    </select>
                    </div>
                </div>
            </div>
            
            <textarea id="code-screen">{{content}}</textarea>
            <button onclick="compileCode()" class="btn btn-primary btn-lg" style="margin-top:10px;">Run</button>
            <div class="row">
                <div class="col-md-6">
                    <p>Input</p>
                    <div id="input" class="container-fluid">
                        <textarea id="code-input" rows="5" cols="35"></textarea>
                    </div>
                </div>

                <div class="col-md-6">
                    <p>Output</p>
                    <div id="output" class="container-fluid">
                        <textarea id="code-output" rows="5" cols="35"></textarea>
                    </div>
                </div>
            </div>
            
            
        </div>
        <div class="col-md-4">
            <div class="panel panel-primary" id="videobox">
                {{!-- video call --}}
                <div id="video-container">
                    <video autoplay id="second-video"></video>
                    <video autoplay id="my-video" muted="true"></video>
                    <div id="step2">
                        <p>Your Id: <span id="my-id">...</span> </p>
                        <div class="form-inline">
                            <input type="text" placeholder="Call user id " class="form-control" id="callto-id"/>
                            <a href="#" class="btn btn-success" id="make-call">Call</a>
                        </div>
                    </div>
                    <div id="step3">
                        <p>Talk to : <span id="second-id">...</span>
                            <a href="#" class="btn btn-danger" id="end-call">End Call</a>
                        </p>
                    </div>
                </div>
            </div>

            <div class="panel panel-primary" id="chatbox">

                {{!-- CHAT ROOM --}}
                <div class="panel-heading">
                    CHAT ROOM
                    <span class="pull-right" id="chatbox-username">
                        {{#if user}}
                            {{user.name}}
                        {{/if}}
                    </span>
                </div>

                <div class="panel-body">
                    <ul class="media-list" style="height:300px; overflow-y:scroll;" id="chatbox-listMessages">

                    </ul>
                </div>

                <div class="panel-footer">
                    <div class="input-group">
                        <input type="text" class="form-control" placeholder="Enter a message" id="userMessage" onkeydown="if(event.keyCode == 13) sendMessage()">
                        <span class="input-group-btn">
                            <button class="btn btn-primary" onclick="sendMessage()">SEND</button>
                        </span>
                    </div>

                </div>
            </div>

            

        </div>
        <div id="chat-icon"> 
            <!-- <span><img src="" alt=""></span> -->
            <button id="chat-btn" class="btn btn-primary">Chat Room</button>
        </div>
        <div id="video-icon"> 
            <!-- <span><img src="" alt=""></span> -->
            <button id="video-btn" class="btn btn-primary">video Chat</button>
        </div>
    </div>
</div>
<input type="hidden" value="{{roomId}}" id="roomId">

<script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.44.0/codemirror.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.44.0/mode/javascript/javascript.min.js"></script>
<script src="/plugins/ot/ot.js"></script>
<script src="/socket.io/socket.io.js"></script>

<script src="https://cdn.jsdelivr.net/npm/peerjs@0.3.20/dist/peer.min.js"></script>

<script>

    var EditorClient = ot.EditorClient;
    var SocketIOAdapter = ot.SocketIOAdapter;
    var CodeMirrorAdapter = ot.CodeMirrorAdapter;

    var socket = io.connect();

    var editor = CodeMirror.fromTextArea(document.getElementById('code-screen'),{
        lineNumbers : true,
        theme : "monokai"
    });


    var code = $('#code-screen').val();
   
    var cmClient;
    function init(str, revision, clients, serverAdapter) {
        if(!code) {
            editor.setValue(str);
        }
        cmClient = window.cmClient = new EditorClient(
            revision, clients, serverAdapter, new CodeMirrorAdapter(editor)
        );
    }

    

    socket.on('doc',function(obj){
        init(obj.str,obj.revision,obj.clients,new SocketIOAdapter(socket));
    });
    


    var username = $('#chatbox-username').val();
    if(username === "") {
        var userId = Math.floor(Math.random()* 9999).toString();
        username = "User"+userId;
        $('#chatbox-username').text(username);
    }

    var roomId = $('#roomId').val();
    socket.emit('joinRoom',{room: roomId, username:username});

    var userMessage = function(name,text) {
        return ('<li class="media"><div class="media"><div class="media-body">'+
            '<b>'+name+'</b>: '+text+'<hr/></div></div></li>');
    }

    var sendMessage = function() {
        var userMessage = $('#userMessage').val();
        socket.emit('chatMessage',{message:userMessage,username:username});
        $('#userMessage').val("");
    }

    socket.on('chatMessage',function(data){
        $('#chatbox-listMessages').append(userMessage(data.username,data.message));
    });




    // PeerJS
    // Compatibility shim
    navigator.getUserMedia = navigator.mozGetUserMedia || navigator.webkitGetUserMedia || navigator.getUserMedia || navigator.msGetUserMedia;
    // PeerJS object
    var peer = new Peer(username + roomId);

    peer.on('open', function(){
      $('#my-id').text(peer.id);
    });

    // Receiving a call
    peer.on('call', function(call){
      // Answer the call automatically (instead of prompting user) for demo purposes
      call.answer(window.localStream);
      step3(call);
    });

    peer.on('error', function(err){
      alert(err.message);
      // Return to step 2 if error occurs
      step2();
    });

    // Click handlers setup
    $(function(){
      $('#make-call').click(function(){
        // Initiate a call!
        var call = peer.call($('#callto-id').val(), window.localStream);
        step3(call);
      });
      $('#end-call').click(function(){
        window.existingCall.close();
        step2();
      });
      step1();
    });
    function step1 () {
      // Get audio/video stream
      navigator.getUserMedia({audio: true, video: true}, function(stream){
        // Set your video displays
        $('#my-video').prop('srcObject', stream);
        window.localStream = stream;
        step2();
      }, function(){ $('#step1-error').show(); });
    }

    function step2 () {
      $('#step1, #step3').hide();
      $('#step2').show();
    }

    function step3 (call) {
      // Hang up on an existing call if present
      if (window.existingCall) {
        window.existingCall.close();
      }
      // Wait for stream on the call, then set peer video display
      call.on('stream', function(stream){
        $('#second-video').prop('srcObject', stream);
      });
      // UI stuff
      window.existingCall = call;
      $('#second-id').text(call.peer);
      call.on('close', step2);
      $('#step1, #step2').hide();
      $('#step3').show();
    }


</script>

<script>


function compileCode(){
    var input = $('#code-input').val();
    var lang = $('#sel1 :selected').val();
    var sourceObj = {
        source : editor.getValue(),
        input : input,
        lang: lang
    }

    $.post('/api/compile',sourceObj,function(data,status){
        console.log("clicked");
        console.log("st",data.body.output);

        $('#code-output').val(data.body.output);

        socket.emit('codeOutput',{output:data.body.output,input:input});

    });

}

socket.on('codeOutput',function(data){
    //console.log(data);
        $('#code-output').val(data.output);
        $('#code-input').val(data.input);
    });

</script>